from typing import Dict, List, Tuple
from src.helpers import Face, Edge
from math import sqrt

gen = 4

# setting for triangle:
# AB: length sqrt(5) edge
# BC: length 1 edge
# CA: length 2 edge

init_map_v2f: Dict[int, List[Face]] = {
    1: [
        (0, -0.5+0j, 0.5+0.5j, 0.5),
        (0, -1j, 0.5, 0),
        (0, -1j, -0.5, 0)
    ],
    2: [
        (0, -0.5j, -0.5+0.5j, 0.5j),
        (0, 1j, 0.5, 0),
        (0, -1j, 0.5, 0)
    ],
    3: [
        (0, 1j, 0.5, 0),
        (0, -1j, 0.5, 0),
        (0, -1j, -0.5 ,0),
        (0, 1j, -0.5, 0)
    ],
    4: [
        (0, -1, 0.5j, 0),
        (0, 0.5j, 0.5-0.5j, -0.5j),
        (0, 0, -0.5-1j, -1j),
        (0, -0.5-1j, 0, -0.5)
    ],
    5: [
        (0, -1, 0.5j, 0),
        (0, 1, 0.5j, 0),
        (0, 0.5-1j, 0, 0.5),
        (0, 0, 0.5-1j, -1j),
        (0, 0, -0.5-1j, -1j),
        (0, -0.5-1j, 0, -0.5)
    ],
    6: [
        (0, 0, sqrt(5)/2*1j, 0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j),
        (0, 0, 1/sqrt(5)*2+0.6*(sqrt(5)/2)*1j, 0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j),
        (0, 1/sqrt(5)*2+0.6*(sqrt(5)/2)*1j, 0, 0.5/sqrt(5)*2-0.5/sqrt(5)*1j),
        (0, -sqrt(5)/2*1j, 0, 0.5/sqrt(5)*2-0.5/sqrt(5)*1j),
        (0, -sqrt(5)/2*1j, 0, -0.5/sqrt(5)*2-0.5/sqrt(5)*1j),
        (0, -sqrt(5)/2*1j, 0, -0.5/sqrt(5)*2-0.5/sqrt(5)*1j),
        (0, -1/sqrt(5)*2+0.6*(sqrt(5)/2)*1j, 0, -0.5/sqrt(5)*2-0.5/sqrt(5)*1j),
        (0, 0, -1/sqrt(5)*2+0.6*(sqrt(5)/2)*1j, -0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j),
        (0, 0, sqrt(5)/2*1j, -0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j),
    ],
    7: [
        (0, 0, sqrt(5)/2*1j, 0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j),
        (0, sqrt(5)/2, 0, 0.5/sqrt(5)+0.5/sqrt(5)*2*1j),
        (0, sqrt(5)/2, 0, 0.5/sqrt(5)-0.5/sqrt(5)*2*1j),
        (0, 0, -sqrt(5)/2*1j, 0.5/sqrt(5)*2-0.5/sqrt(5)*4*1j),
        (0, 0, -sqrt(5)/2*1j, -0.5/sqrt(5)*2-0.5/sqrt(5)*4*1j),
        (0, 0, -sqrt(5)/2*1j, -0.5/sqrt(5)*2-0.5/sqrt(5)*4*1j),
        (0, -sqrt(5)/2, 0, -0.5/sqrt(5)-0.5/sqrt(5)*2*1j),
        (0, -sqrt(5)/2, 0, -0.5/sqrt(5)+0.5/sqrt(5)*2*1j),
        (0, 0, sqrt(5)/2*1j, -0.5/sqrt(5)*2+0.5/sqrt(5)*4*1j)
    ],
    8: [
        (0, 0, 0.5+1j, 1j),
        (0, 0.5+1j, 0, 0.5),
        (0, 0.5-1j, 0, 0.5),
        (0, 0, 0.5-1j, -1j),
        (0, -1-0.5j, 0, -0.5j),
        (0, -1-0.5j, 0, -0.5/sqrt(5)*2+0.5/sqrt(5)*1j),
        (0, 0, -0.5+1j, -1/sqrt(5)*2+1/sqrt(5)*1j),
        (0, 0, -0.5+1j, 1j)
    ],
    9: [
        (0, 0, 1+0.5j, 1/sqrt(5)+1/sqrt(5)*2j),
        (0, 0, 1+0.5j, 1),
        (0, 0.5-1j, 0, 0.5),
        (0, 0, 0.5-1j, -1j),
        (0, 0, -0.5-1j, -1j),
        (0, -0.5-1j, -0.5, 0),
        (0, -0.5+1j, 0, -0.5),
        (0, -0.5+1j, 0, 0.5/sqrt(5)+0.5/sqrt(5)*2j)
    ],
    10: [
        (0, 0, 0.5+1j, 1j),
        (0, 0, 0.5+1j, 1/sqrt(5)*2+1/sqrt(5)*1j),
        (0, 1-0.5j, 0, 0.5/sqrt(5)*2+0.5/sqrt(5)*1j),
        (0, 1-0.5j, 0, -0.5j),
        (0, -1-0.5j, 0, -0.5j),
        (0, -1-0.5j, 0, -0.5/sqrt(5)*2+0.5/sqrt(5)*1j),
        (0, 0, -0.5+1j, -1/sqrt(5)*2+1/sqrt(5)*1j),
        (0, 0, -0.5+1j, 1j)
    ],
    11: [
        (0, 0, 0.5+1j, 1j),
        (0, 0.5+1j, 0, 0.5),
        (0, 0.5-1j, 0, 0.5),
        (0, 0, 0.5-1j, -1j),
        (0, 0, -0.5-1j, -1j),
        (0, -0.5-1j, 0, -0.5),
        (0, -0.5+1j, 0, -0.5),
        (0, 0, -0.5+1j, 1j),
    ]
}

rule = {
    
}