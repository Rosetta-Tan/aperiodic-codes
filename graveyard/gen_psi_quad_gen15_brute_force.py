import numpy as np
import matplotlib.pyplot as plt
from ldpc.mod2 import row_basis, nullspace, rank
from helpers_distance import get_classical_code_distance_time_limit, get_classical_code_distance_special_treatment
import json
import os
from itertools import product

savedir = '/Users/yitan/Library/CloudStorage/GoogleDrive-yitan@g.harvard.edu/My Drive/from_cannon/qmemory_simulation/data/qc_code/psi_tiling/gen_15_good_boundary2/'
num_faces = 406
num_vertices = 454
h = np.zeros((num_faces, num_vertices), dtype=int)

edges = []

vertex_pos = {
    0: [560.6149, 593.0713],
    1: [520.0104, 640.1309],
    2: [565.6554, 661.4295],
    3: [601.3692, 656.384],
    4: [513.8765, 682.177],
    5: [548.5904, 677.1287],
    6: [595.3739, 698.4301],
    7: [648.2064, 677.6827],
    8: [473.2749, 729.2573],
    9: [520.0104, 750.556],
    10: [554.6733, 745.7861],
    11: [607.2221, 724.763],
    12: [654.2469, 746.0617],
    13: [689.0597, 740.9657],
    14: [601.3692, 766.5953],
    15: [636.182, 761.7749],
    16: [682.9655, 783.0622],
    17: [735.7443, 762.3261],
    18: [770.3389, 757.5057],
    19: [817.2529, 778.5792],
    20: [467.1807, 771.4157],
    21: [479.2617, 797.6363],
    22: [560.7138, 813.8894],
    23: [607.5511, 834.9125],
    24: [642.2677, 830.0921],
    25: [695.0437, 809.4064],
    26: [741.8385, 830.7078],
    27: [776.5523, 825.6091],
    28: [822.809, 846.6826],
    29: [857.6284, 841.8622],
    30: [689.0597, 851.4525],
    31: [723.7764, 846.6321],
    32: [770.5571, 867.7056],
    33: [805.1483, 862.6601],
    34: [852.0657, 883.9587],
    35: [904.8445, 863.2226],
    36: [473.2749, 839.7329],
    37: [507.9802, 834.6369],
    38: [554.7722, 855.9355],
    39: [432.5658, 887.0916],
    40: [479.2617, 908.0642],
    41: [514.0744, 903.0187],
    42: [566.8532, 882.2712],
    43: [613.6481, 903.5699],
    44: [648.3619, 898.5356],
    45: [695.1454, 919.8343],
    46: [729.8084, 914.7887],
    47: [776.7021, 936.0874],
    48: [811.3114, 931.0419],
    49: [864.1467, 909.9366],
    50: [910.9275, 931.6044],
    51: [945.6441, 926.5588],
    52: [426.6298, 928.8004],
    53: [461.2956, 923.98],
    54: [508.0904, 945.0648],
    55: [560.8692, 924.0922],
    56: [595.5831, 919.2718],
    57: [642.4203, 940.5704],
    58: [677.0804, 935.5333],
    59: [723.8753, 956.8348],
    60: [858.2052, 952.3405],
    61: [892.8653, 947.3064],
    62: [939.6573, 968.6049],
    63: [992.4361, 947.8575],
    64: [1027.5852, 943.0371],
    65: [1073.9448, 964.1106],
    66: [1108.6614, 959.0764],
    67: [1126.7236, 943.3745],
    68: [1161.4374, 938.3289],
    69: [1208.2209, 959.6276],
    70: [1242.4452, 954.8072],
    71: [385.8812, 975.8807],
    72: [432.6647, 997.1793],
    73: [467.3361, 992.145],
    74: [520.1573, 971.0603],
    75: [566.8532, 992.6963],
    76: [601.1277, 987.4566],
    77: [683.1747, 1003.9152],
    78: [735.7667, 982.8304],
    79: [782.317, 1004.4664],
    80: [817.0162, 999.4209],
    81: [864.1467, 1020.7195],
    82: [898.9044, 1015.6846],
    83: [951.7383, 994.6005],
    84: [997.8214, 1015.9609],
    85: [1033.1904, 1011.1405],
    86: [1080.0305, 1031.9384],
    87: [1114.6934, 1027.4554],
    88: [1155.4421, 980.375],
    89: [1167.5231, 1006.7079],
    90: [1214.3152, 1028.0066],
    91: [1248.9753, 1022.9723],
    92: [1295.8125, 1044.2597],
    93: [1330.5291, 1039.2254],
    94: [1289.7296, 975.8807],
    95: [379.8859, 1018.2641],
    96: [391.9669, 1044.2597],
    97: [437.5416, 1065.5583],
    98: [473.419, 1060.5241],
    99: [514.0744, 1013.4438],
    100: [548.8872, 1008.3982],
    101: [595.5831, 1029.6969],
    102: [648.3619, 1008.9494],
    103: [729.9582, 1025.2138],
    104: [764.672, 1020.3001],
    105: [811.4668, 1041.8043],
    106: [945.6441, 1036.9844],
    107: [980.4681, 1032.4896],
    108: [1027.2517, 1053.237],
    109: [1061.9655, 1048.2028],
    110: [1108.6614, 1069.4902],
    111: [1161.4374, 1048.754],
    112: [1196.3519, 1043.524],
    113: [1243.0365, 1064.6698],
    114: [1277.7503, 1059.8494],
    115: [1324.5451, 1081.2715],
    116: [1376.5355, 1060.5241],
    117: [520.1573, 1081.8227],
    118: [554.9277, 1076.5835],
    119: [607.7517, 1056.0411],
    120: [654.5438, 1076.7772],
    121: [689.2095, 1072.2942],
    122: [770.7125, 1088.5473],
    123: [823.1906, 1067.8111],
    124: [870.3286, 1088.8285],
    125: [905, 1084.0642],
    126: [951.8372, 1105.3629],
    127: [986.6528, 1100.3173],
    128: [1033.2356, 1121.3404],
    129: [1068.006, 1116.8574],
    130: [1120.8385, 1095.8343],
    131: [1115.0811, 1137.8804],
    132: [1166.6828, 1116.901],
    133: [1202.2878, 1111.5892],
    134: [1249.0318, 1133.3889],
    135: [1283.7908, 1127.9395],
    136: [1336.6233, 1107.6044],
    137: [1383.4069, 1128.9059],
    138: [1418.1207, 1123.5315],
    139: [385.8812, 1086.3058],
    140: [420.6967, 1081.2715],
    141: [467.3361, 1102.5589],
    142: [502.1941, 1097.7385],
    143: [548.8872, 1118.8233],
    144: [601.666, 1098.0758],
    145: [636.4816, 1093.0416],
    146: [683.1209, 1114.3289],
    147: [717.9903, 1109.2947],
    148: [764.672, 1130.5934],
    149: [817.5498, 1109.8459],
    150: [852.2664, 1104.8117],
    151: [899.0584, 1126.1103],
    152: [933.7723, 1121.2899],
    153: [980.5671, 1142.1587],
    154: [1196.253, 1154.1335],
    155: [1330.6818, 1149.6505],
    156: [1365.9986, 1144.605],
    157: [1412.1367, 1165.9036],
    158: [1464.9155, 1145.159],
    159: [1499.6042, 1140.3386],
    160: [426.8786, 1149.6505],
    161: [473.3192, 1170.952],
    162: [508.2346, 1166.1821],
    163: [561.0671, 1145.159],
    164: [607.7517, 1166.4576],
    165: [642.5645, 1161.4234],
    166: [724.0222, 1177.6765],
    167: [776.8519, 1156.9291],
    168: [823.1906, 1178.2277],
    169: [858.3606, 1172.8555],
    170: [905, 1194.4921],
    171: [939.8128, 1189.4466],
    172: [992.6368, 1168.6991],
    173: [1039.4288, 1189.9978],
    174: [1074.0946, 1184.6262],
    175: [1120.9375, 1206.2622],
    176: [1155.5976, 1201.2167],
    177: [1208.4301, 1180.4692],
    178: [1255.2136, 1201.4923],
    179: [1289.885, 1196.8655],
    180: [1336.6233, 1218.0323],
    181: [1371.388, 1212.9863],
    182: [1424.2149, 1192.2393],
    183: [1471.0097, 1213.538],
    184: [1505.3395, 1207.6395],
    185: [1552.5071, 1229.8024],
    186: [1546.4242, 1161.4234],
    187: [1587.2209, 1225.1138],
    188: [420.7957, 1191.6881],
    189: [432.9756, 1218.0323],
    190: [479.6574, 1239.3451],
    191: [515.3369, 1234.2854],
    192: [554.9557, 1187.2051],
    193: [589.7857, 1182.1567],
    194: [636.5805, 1203.4582],
    195: [689.2604, 1182.1567],
    196: [770.916, 1198.9752],
    197: [805.6807, 1194.1548],
    198: [852.3653, 1215.2283],
    199: [986.7009, 1210.7452],
    200: [1021.3666, 1205.6992],
    201: [1068.0597, 1226.9984],
    202: [1202.4348, 1222.5153],
    203: [1237.2504, 1217.4697],
    204: [1283.9435, 1238.7684],
    205: [1418.1207, 1234.2854],
    206: [1453.0465, 1229.8024],
    207: [1499.6042, 1250.5385],
    208: [1534.4421, 1245.5043],
    209: [1581.237, 1266.8029],
    210: [1634.0653, 1245.7799],
    211: [426.9351, 1260.0671],
    212: [461.5952, 1255.3085],
    213: [508.2624, 1276.3315],
    214: [559.7481, 1255.9214],
    215: [595.682, 1251.101],
    216: [648.6587, 1229.8024],
    217: [695.4535, 1251.101],
    218: [730.1136, 1246.2806],
    219: [776.8519, 1267.3542],
    220: [811.4668, 1262.1149],
    221: [864.4435, 1241.4602],
    222: [911.2383, 1262.8711],
    223: [945.8984, 1257.8256],
    224: [992.6368, 1278.8486],
    225: [1027.4057, 1274.6412],
    226: [1080.2283, 1253.3426],
    227: [1127.0232, 1274.6412],
    228: [1161.6861, 1269.8208],
    229: [1208.4301, 1290.8943],
    230: [1243.3446, 1285.8601],
    231: [1296.0245, 1265.0004],
    232: [1342.808, 1286.4113],
    233: [1377.4766, 1281.3658],
    234: [1422.9411, 1302.6644],
    235: [1459.1294, 1297.6302],
    236: [1505.7236, 1318.6476],
    237: [1540.5391, 1313.8833],
    238: [1593.3152, 1293.1358],
    239: [1640.0986, 1314.4345],
    240: [1674.8154, 1309.6141],
    241: [386.1808, 1307.4848],
    242: [432.9756, 1328.1705],
    243: [467.7884, 1323.3501],
    244: [520.4682, 1302.6644],
    245: [567.2489, 1323.9631],
    246: [601.9656, 1318.9175],
    247: [648.6587, 1340.2162],
    248: [683.4234, 1335.1816],
    249: [730.1674, 1356.4806],
    250: [764.9264, 1351.4351],
    251: [642.6747, 1271.8372],
    252: [678.3005, 1266.8029],
    253: [724.1721, 1288.1016],
    254: [759.1223, 1283.0561],
    255: [805.6807, 1304.3547],
    256: [858.6734, 1283.6073],
    257: [893.1734, 1279.1242],
    258: [939.8128, 1299.8717],
    259: [974.6707, 1295.1635],
    260: [1021.4656, 1316.1248],
    261: [1074.0946, 1295.7147],
    262: [1110.2607, 1290.3431],
    263: [1155.9509, 1311.6979],
    264: [1190.4669, 1306.5962],
    265: [1237.1514, 1327.8949],
    266: [1290.0829, 1306.8775],
    267: [1324.4438, 1302.0571],
    268: [1371.5378, 1323.4119],
    269: [1406.7916, 1318.3663],
    270: [1452.9448, 1339.665],
    271: [817.8607, 1330.4933],
    272: [864.4435, 1351.9863],
    273: [899.358, 1346.6143],
    274: [945.8984, 1368.2507],
    275: [980.765, 1363.4303],
    276: [1033.5438, 1342.469],
    277: [1080.2283, 1363.4864],
    278: [1114.9987, 1358.6099],
    279: [1161.8924, 1379.4696],
    280: [1196.5017, 1374.9752],
    281: [1249.1307, 1354.2504],
    282: [1296.1234, 1375.5405],
    283: [1330.6394, 1370.4922],
    284: [1377.6745, 1391.7936],
    285: [1412.4448, 1386.7453],
    286: [1465.1134, 1365.458],
    287: [1511.9082, 1387.3106],
    288: [1546.6221, 1382.4902],
    289: [1587.2209, 1335.1819],
    290: [1621.29, 1330.3615],
    291: [1459.1294, 1407.7179],
    292: [380.1968, 1349.1935],
    293: [414.9106, 1344.148],
    294: [461.5952, 1365.4467],
    295: [514.3288, 1344.4293],
    296: [549.1868, 1339.665],
    297: [595.682, 1360.6263],
    298: [630.6955, 1355.8059],
    299: [677.4875, 1377.2167],
    300: [689.5572, 1403.5637],
    301: [771.0149, 1419.8141],
    302: [811.4668, 1372.7337],
    303: [846.4803, 1367.9133],
    304: [893.2723, 1388.9868],
    305: [905.3533, 1415.3338],
    306: [952.1368, 1436.3568],
    307: [986.8055, 1431.1991],
    308: [1027.5598, 1384.5038],
    309: [1062.2736, 1379.4696],
    310: [1109.0571, 1400.7682],
    311: [1121.1381, 1427.1039],
    312: [1033.6427, 1452.8856],
    313: [1068.3085, 1447.8513],
    314: [1115.1966, 1469.15],
    315: [1167.9302, 1448.1269],
    316: [1150.0963, 1464.1044],
    317: [1202.6468, 1443.357],
    318: [1196.7052, 1485.4031],
    319: [1249.1307, 1464.4418],
    320: [1243.2457, 1396.2739],
    321: [1278.0584, 1391.5657],
    322: [1324.743, 1412.5383],
    323: [1284.1441, 1459.6214],
    324: [1336.9202, 1438.874],
    325: [1383.715, 1459.6214],
    326: [1418.1207, 1455.1271],
    327: [1330.8372, 1480.9201],
    328: [1365.6528, 1476.1501],
    329: [1412.7963, 1497.1732],
    330: [339.5951, 1396.2739],
    331: [386.1808, 1417.5753],
    332: [420.9935, 1412.5383],
    333: [473.7723, 1391.7936],
    334: [520.4682, 1412.811],
    335: [555.2273, 1408.0467],
    336: [601.9656, 1429.3454],
    337: [636.7346, 1424.3084],
    338: [683.5732, 1445.6603],
    339: [736.352, 1424.8624],
    340: [718.386, 1440.5615],
    341: [817.7618, 1440.8399],
    342: [852.518, 1436.0195],
    343: [899.4118, 1457.3799],
    344: [934.1708, 1452.3316],
    345: [980.8667, 1473.9704],
    346: [1494.7838, 1402.8975],
    347: [1231.3653, 1480.6388],
    348: [1278.1574, 1501.6562],
    349: [333.5009, 1438.2819],
    350: [345.5819, 1464.6556],
    351: [392.3739, 1485.6787],
    352: [427.1895, 1480.9201],
    353: [467.8393, 1433.8284],
    354: [502.5022, 1429.3454],
    355: [549.2857, 1449.3334],
    356: [473.8713, 1502.2187],
    357: [508.588, 1497.4488],
    358: [561.3639, 1476.4257],
    359: [608.1588, 1497.5105],
    360: [642.8189, 1492.6901],
    361: [689.5572, 1514.3149],
    362: [724.483, 1509.2189],
    363: [765.0819, 1462.2003],
    364: [777.1488, 1488.1958],
    365: [823.9436, 1509.4945],
    366: [858.6574, 1504.4602],
    367: [905.3533, 1526.085],
    368: [940.265, 1521.0507],
    369: [993.0438, 1499.9659],
    370: [1039.7284, 1521.2646],
    371: [1074.397, 1516.2303],
    372: [1121.2371, 1537.529],
    373: [1156.0498, 1532.4834],
    374: [1202.5903, 1553.8382],
    375: [1237.4031, 1548.7478],
    376: [1290.2384, 1528.0004],
    377: [1284.0933, 1570.0352],
    378: [1337.0219, 1549.0178],
    379: [1319.9226, 1565.2148],
    380: [1371.7357, 1544.2535],
    381: [339.4849, 1506.7017],
    382: [374.3118, 1501.9375],
    383: [421.0925, 1522.9549],
    384: [555.2273, 1519.1353],
    385: [590.0966, 1513.7075],
    386: [636.7784, 1534.7249],
    387: [671.594, 1530.2419],
    388: [718.386, 1550.9894],
    389: [771.1648, 1530.2419],
    390: [805.8786, 1525.1964],
    391: [852.7243, 1546.2812],
    392: [887.3873, 1541.4608],
    393: [934.1708, 1562.9686],
    394: [986.9496, 1542.3494],
    395: [1021.6634, 1536.9665],
    396: [1068.4583, 1558.1482],
    397: [1104.3355, 1553.3278],
    398: [1150.0963, 1574.5295],
    399: [298.886, 1553.7821],
    400: [345.6809, 1574.8051],
    401: [380.3438, 1570.3165],
    402: [433.2724, 1549.2991],
    403: [479.4621, 1570.5977],
    404: [514.6256, 1565.5522],
    405: [561.0684, 1586.8508],
    406: [596.2784, 1581.8053],
    407: [643.0224, 1603.4413],
    408: [677.6882, 1598.0697],
    409: [730.467, 1577.3223],
    410: [777.1488, 1598.6209],
    411: [811.9191, 1593.5867],
    412: [858.6574, 1614.6602],
    413: [893.473, 1609.8398],
    414: [946.2518, 1589.0923],
    415: [940.1123, 1631.2507],
    416: [993.0438, 1610.391],
    417: [976.0463, 1626.4303],
    418: [1027.7039, 1605.3568],
    419: [1074.4422, 1626.4303],
    420: [1109.255, 1621.6099],
    421: [1161.8359, 1600.8624],
    422: [1156.0498, 1642.9085],
    423: [1208.5888, 1622.1638],
    424: [1191.8848, 1638.0881],
    425: [1243.7492, 1617.3434],
    426: [292.9515, 1595.8282],
    427: [327.934, 1590.7826],
    428: [374.4107, 1611.5427],
    429: [427.1895, 1591.3339],
    430: [461.9033, 1586.2996],
    431: [508.7406, 1607.5983],
    432: [543.4007, 1602.5527],
    433: [590.0966, 1623.8514],
    434: [724.483, 1619.3684],
    435: [759.1733, 1614.6602],
    436: [252.2014, 1643.0753],
    437: [298.886, 1664.2099],
    438: [333.7016, 1659.1616],
    439: [386.4776, 1638.4255],
    440: [380.4936, 1680.4631],
    441: [415.9036, 1675.3982],
    442: [433.2724, 1659.7156],
    443: [467.9382, 1654.341],
    444: [514.6256, 1676.1058],
    445: [549.4949, 1671.2144],
    446: [602.2737, 1650.1956],
    447: [596.2784, 1692.2331],
    448: [632.068, 1687.4125],
    449: [649.0572, 1671.4857],
    450: [683.7287, 1666.4487],
    451: [526.0537, 818.935],
    452: [735.7609, 1093.5928],
    453: [1149.5571, 1132.8349],
}

# key is the vertex number, value is the x and y coordinates
# convert the dictionary to two lists
xs = []
ys = []
for key, value in vertex_pos.items():
    xs.append(value[0])
    ys.append(-value[1])
xs = np.array(xs)
ys = np.array(ys)

face_to_vertex = {
    0: [0,3,2,1],
    1: [1,2,5,4],
    2: [2,3,6,5],
    3: [3,7,11,6],
    4: [4,10,9,8],
    5: [5,6,10,4],
    6: [6,11,14,10],
    7: [7,13,12,11],
    8: [11,12,15,14],
    9: [12,13,16,15],
    10: [8,9,21,20],
    11: [9,22,451,21],
    12: [9,10,14,22],
    13:[14,24,23,22],
    14: [15,16,24,14],
    15: [13,17,25,16],
    16: [16,25,30,24],
    17: [17,27,26,25],
    18: [17,18,19,27],
    19: [19,29,28,27],
    20: [25,26,31,30],
    21: [26,27,32,31],
    22: [27,28,33,32],
    23: [28,29,34,33],
    24: [21,451,37,36],
    25: [451,22,38,37],
    26: [36,41,40,39],
    27: [37,38,41,36],
    28: [22,23,42,38],
    29: [23,44,43,42],
    30: [24,30,44,23],
    31: [30,46,45,44],
    32: [31,32,46,30],
    33: [32,48,47,46],
    34: [33,34,48,32],
    35: [29,35,49,34],
    36: [34,49,50,48],
    37: [35,49,34,29],
    36: [34,49,60,48],
    37: [35,51,50,49],
    38: [49,50,61,60],
    39: [50,51,62,61],
    40: [39,40,53,52],
    41: [40,41,54,53],
    42: [38,42,55,41],
    43: [41,55,74,54],
    44: [42,43,56,55],
    45: [43,44,57,56],
    46: [44,45,58,57],
    47: [45,46,59,58],
    48: [46,47,78,59],
    49: [47,80,79,78],
    50: [47,48,60,80],
    51: [60,82,81,80],
    52: [61,62,82,60],
    53: [51,63,83,62],
    54: [62,83,106,82],
    55: [63,85,84,83],
    56: [64,65,85,63],
    57: [65,87,86,85],
    58: [66,88,87,65],
    59: [67,68,88,66],
    60: [68,69,89,88],
    61: [69,91,90,89],
    62: [70,94,91,69],
    63: [94,93,92,91],
    64: [52,73,72,71],
    65: [53,54,73,52],
    66: [54,74,99,73],
    67: [55,76,75,74],
    68: [56,57,76,55],
    69: [57,77,102,76],
    70: [58,59,77,57],
    71: [59,78,103,77],
    72: [78,79,104,103],
    73: [79,80,105,104],
    74: [80,81,123,105],
    75: [81,125,124,123],
    76: [81,82,106,125],
    77: [83,84,107,106],
    78: [84,85,108,107],
    79: [85,86,109,108],
    80: [86,87,110,109],
    81: [88,89,111,87],
    82: [89,90,112,111],
    83: [90,91,113,112],
    84: [91,92,114,113],
    85: [92,93,115,114],
    86: [93,116,136,115],
    87: [71,72,96,95],
    88: [72,98,97,96],
    89: [73,99,98,72],
    90: [74,75,100,99],
    91: [75,76,101,100],
    92: [76,102,119,101],
    93: [99,118,117,98],
    94: [99,100,101,118],
    95: [101,119,144,118],
    96: [102,121,120,119],
    97: [77,103,121,102],
    98: [103,122,452,121],
    99: [103,104,105,122],
    100: [105,123,149,122],
    101: [119,120,145,144],
    102: [120,121,146,145],
    103: [121,452,147,146],
    104: [452,122,148,147],
    105: [122,149,167,148],
    106: [123,124,150,149],
    107: [124,125,151,150],
    108: [106,127,126,125],
    109: [106,107,108,127],
    110: [108,129,128,127],
    111: [108,109,110,129],
    112: [87,111,130,110],
    113: [111,133,132,130],
    114: [112,113,133,111],
    115: [113,135,134,133],
    116: [114,115,135,113],
    117: [115,136,155,135],
    118: [116,138,137,136],
    119: [136,137,156,155],
    120: [137,138,157,156],
    121: [125,126,152,151],
    122: [126,127,153,152],
    123: [127,128,172,153],
    124: [128, 129,131,174],
    125: [110,130,131,129],
    126: [130,132,453,131],
    127: [132,133,154,453],
    128: [133,134,177,154],
    129: [134,179,178,177],
    130: [134,135,155,179],
    131: [155,181,180,179],
    132: [155,156,157,181],
    133: [138,158,182,157],
    134: [158,184,183,182],
    135: [159,186,184,158],
    136: [186,187,185,184],
    137: [96,97,140,139],
    138: [97,98,141,140],
    139: [98,117,142,141],
    140: [117,118,143,142],
    141: [118,144,163,143],
    142: [144,165,164,163],
    143: [144,145,146,165],
    144: [144,145,146,165],
    145: [146,147,148,166],
    146: [148,167,196,166],
    147: [149,169,168,167],
    148: [150,151,169,149],
    149: [151,171,170,169],
    150: [151,152,153,171],
    151: [153,172,199,171],
    152: [128,174,173,172],
    153: [131,176,175,174],
    154: [453,154,176,131],
    155: [154,177,202,176],
    156: [157,182,205,181],
    157: [139,140,141,160],
    158: [141,162,161,160],
    159: [141,142,143,162],
    160: [143,163,192,162],
    161: [163,164,193,192],
    162: [164,165,194,193],
    163: [165,195,216,194],
    164: [166,196,218,195],
    165: [167,168,197,196],
    166: [168,169,198,197],
    167: [169,170,221,198],
    168: [170,171,199,223],
    169: [172,173,200,199],
    170: [173,174,201,200],
    171: [174,175,226,201],
    172: [177,178,203,202],
    173: [178,179,204,203],
    174: [179,180,231,204],
    175: [180,181,205,233],
    176: [182,183,206,205],
    177: [183,184,207,206],
    178: [184,185,208,207],
    179: [185,187,209,208],
    180: [187,210,238,209],
    181: [160,161,189,188],
    182: [161,191,190,189],
    183: [162,192,191,161],
    184: [192,215,214,191],
    185: [192,193,194,215],
    186: [194,216,251,215],
    187: [195,218,217,216],
    188: [196,220,219,218],
    189: [196,197,198,220],
    190: [198,221,256,220],
    191: [170,223,222,221],
    192: [199,225,224,223],
    193: [199,200,201,225],
    194: [201,226,261,225],
    195: [175,228,227,226],
    196: [175,176,202,228],
    197: [202,230,229,228],
    198: [202,203,204,230],
    199: [204,231,266,230],
    200: [180,233,232,231],
    201: [205,235,234,233],
    202: [205,206,207,235],
    203: [207,237,236,235],
    204: [207,208,209,237],
    205: [209,238,289,237],
    206: [238,239,290,289],
    207: [210,240,239,238],
    208: [189,190,212,211],
    209: [190,191,213,212],
    210: [191,214,244,213],
    211: [214,246,245,244],
    212: [214,215,251,246],
    213: [216,217,252,251],
    214: [217,218,253,252],
    215: [218,219,254,253],
    216: [219,220,255,254],
    217: [220,256,271,255],
    218: [221,222,257,256],
    219: [222,223,258,257],
    220: [223,224,259,258],
    221: [224,225,260,259],
    222: [225,261,276,260],
    223: [226,227,262,261],
    224: [227,228,263,262],
    225: [228,229,264,263],
    226: [229,230,265,264],
    227: [230,266,281,265],
    228: [231,232,267,266],
    229: [232,233,268,267],
    230: [233,234,269,268],
    231: [234,235,270,269],
    232: [235,236,286,270],
    233: [211,243,242,241],
    234: [211,212,213,243],
    235: [213,244,295,243],
    236: [244,245,296,295],
    237: [245,246,297,296],
    238: [251,248,247,246],
    239: [251,252,253,248],
    240: [253,250,249,248],
    241: [253,254,255,250],
    242: [255,271,302,250],
    243: [256,273,272,271],
    244: [256,257,258,273],
    245: [258,275,274,273],
    246: [258,259,260,275],
    247: [260,276,308,275],
    248: [261,278,277,276],
    249: [261,262,263,278],
    250: [263,280,279,278],
    251: [263,264,265,280],
    252: [265,281,320,280],
    253: [266,283,282,281],
    254: [266,267,268,283],
    255: [268,285,284,283],
    256: [268,269,270,285],
    257: [270,286,291,285],
    258: [236,288,287,286],
    259: [236,237,289,288],
    260: [286,287,346,291],
    261: [241,242,293,292],
    262: [242,243,294,293],
    263: [243,295,333,294],
    264: [246,247,298,297],
    265: [247,248,299,298],
    266: [248,249,300,299],
    267: [249,250,302,301],
    268: [271,272,303,302],
    269: [272,273,304,303],
    270: [273,274,305,304],
    271: [276,277,309,308],
    272: [277,278,310,309],
    273: [278,279,311,310],
    274: [281,282,321,320],
    275: [282,283,322,321],
    276: [283,284,324,322],
    277: [292,332,331,330],
    278: [292,293,294,332],
    279: [294,333,353,332],
    280: [295,335,334,333],
    281: [295,296,297,335],
    282: [297,337,336,335],
    283: [297,298,299,337],
    284: [299,300,338,337],
    285: [249,301,339,300],
    286: [302,342,341,301],
    287: [302,303,304,342],
    288: [304,305,343,342],
    289: [274,307,306,305],
    290: [274,275,308,307],
    291: [308,313,312,307],
    292: [308,309,310,313],
    293: [310,311,314,313],
    294: [279,317,315,311],
    295: [279,280,320,317],
    296: [320,323,319,317],
    297: [320,321,322,323],
    298: [322,324,327,323],
    299: [284,326,325,324],
    300: [284,285,291,326],
    301: [324,325,328,327],
    302: [325,326,329,328],
    303: [330,331,350,349],
    304: [331,352,351,350],
    305: [331,332,353,352],
    306: [333,334,354,353],
    307: [334,335,355,354],
    308: [335,336,358,355],
    309: [300,339,340,338],
    310: [339,301,363,340],
    311: [301,341,364,363],
    312: [305,306,344,343],
    313: [306,307,345,344],
    314: [307,312,369,345],
    315: [311,315,316,314],
    316: [315,317,318,316],
    317: [317,319,347,318],
    318: [319,323,348,347],
    319: [323,327,376,348],
    320: [327,380,378,376],
    321: [327,328,329,380],
    322: [353,357,356,352],
    323: [353,354,355,357],
    324: [355,358,384,357],
    325: [336,360,359,358],
    326: [336,337,338,360],
    327: [338,362,361,360],
    328: [338,340,363,362],
    329: [363,364,389,362],
    330: [341,366,365,364],
    331: [341,342,343,366],
    332: [343,368,367,366],
    333: [343,344,345,368],
    334: [345,369,394,368],
    335: [312,371,370,369],
    336: [312,313,314,371],
    337: [314,373,372,371],
    338: [314,316,318,373],
    339: [318,375,374,373],
    340: [318,347,348,375],
    341: [348,376,377,375],
    342: [376,378,379,377],
    343: [350,351,382,381],
    344: [351,352,383,382],
    345: [352,356,402,383],
    346: [356,404,403,402],
    347: [356,357,384,404],
    348: [358,359,385,384],
    349: [359,360,386,385],
    350: [360,361,387,386],
    351: [361,362,388,387],
    352: [362,389,409,388],
    353: [364,365,390,389],
    354: [365,366,391,390],
    355: [366,367,392,391],
    356: [367,368,393,392],
    357: [368,394,414,393],
    358: [369,370,395,394],
    359: [370,371,396,395],
    360: [371,372,397,396],
    361: [372,373,398,397],
    362: [373,374,421,398],
    363: [374,425,423,421],
    364: [374,375,377,425],
    365: [381,401,400,399],
    366: [381,382,383,401],
    367: [383,402,429,401],
    368: [402,403,430,429],
    369: [403,404,431,430],
    370: [404,405,432,431],
    371: [384,406,405,404],
    372: [384,385,386,406],
    373: [386,408,407,406],
    374: [386,387,388,408],
    375: [388,409,434,408],
    376: [389,411,410,409],
    377: [389,390,391,411],
    378: [391,413,412,411],
    379: [391,392,393,413],
    380: [393,414,415,413],
    381: [414,416,417,415],
    382: [394,418,416,414],
    383: [394,395,396,418],
    384: [396,420,419,418],
    385: [396,397,398,420],
    386: [398,421,422,420],
    387: [421,423,424,422],
    388: [399,400,427,426],
    389: [400,401,428,427],
    390: [401,429,439,428],
    391: [426,438,437,436],
    392: [426,427,428,438],
    393: [428,439,440,438],
    394: [439,442,441,440],
    395: [429,443,442,439],
    396: [429,430,431,443],
    397: [431,445,444,443],
    398: [431,432,433,445],
    399: [405,406,433,432],
    400: [406,407,446,433],
    401: [433,446,447,445],
    402: [446,449,448,447],
    403: [407,450,449,446],
    404: [407,408,434,450],
    405: [409,410,435,434],
}

for i in range(num_faces):
    for j in face_to_vertex[i]:
        h[i, j] = 1

edges = []
for i in range(num_faces):
    edges.extend([[face_to_vertex[i][j], face_to_vertex[i][(j+1)%len(face_to_vertex[i])]] for j in range(len(face_to_vertex[i]))])
edges = np.array(edges)

############################################################################################################
# post-processing
############################################################################################################
# h[135, 185] = 1
# h[135, 187] = 1

# columns_to_remove = [0, 18, 20, 64, 67, 70, 71, 95, 139, 159, 188, 240, 290, 346, 349, 426, 436, 437]
columns_to_remove = list(range(47)) + \
[
    48,49,50,51,61,56,
    64,
    66,67,68,70,
    52,53,54,56,58,71,72,73,74,95,96,97,98,139,140,160,188,189,241,330,349,350,399,400,426,427,428,429,430,431,432,433,434,435,436,437,438,440,441,442,443,444,445,446,447,448,449,450,
    412,
    115,116,136,137,138,
    155,156,157,158,159,
    180,181,182,183,184,185,186,187,
    204,205,206,207,208,209,210,
    291,346,
    231,232,233,234,235,236,237,238,239,240,
    265,266,267,268,269,270,
    281,282,283,284,285,286,287,288,289,290,
    318,319,320,321,322,323,324,325,326,327,328,329,
    374,375,376,377,378,379,380,
    403,405,407,412,415,416,417,419,421,422,423,424,425,440,441,442,443,444,445,446,447,448,449,450,
    451,347,348,398,410,
    439
]
columns_to_remove = np.unique(columns_to_remove)
columns_to_remove = sorted(columns_to_remove)

h = np.delete(h, columns_to_remove, axis=1)

# remove the rows that are not checks anymore
rows_to_remove = []
for i in range(h.shape[0]):
    if np.sum(h[i, :]) < 3:
        rows_to_remove.append(i)
h = np.delete(h, rows_to_remove, axis=0)

# create a mapping between the old and new indices
old_to_new = {}
new_to_old = {}
new_index = 0
for i in range(num_vertices):
    if i not in columns_to_remove:
        old_to_new[i] = new_index
        new_to_old[new_index] = i
        new_index += 1

# with open('new_to_old.json', 'w') as fp:
#     json.dump(new_to_old, fp, indent=4)

print('(m,n) =', h.shape)
print('k = ', h.shape[1] - rank(h))
k = h.shape[1] - rank(h)
# # print('d = ', get_classical_code_distance_time_limit(h))


logical_basis = row_basis(nullspace(h))
print(logical_basis.shape)
logical_op_coeffs = np.asarray(list(product([0, 1], repeat=k)))


for i in range(logical_op_coeffs.shape[0]):
# for i in range(2):
    logical_op = (logical_op_coeffs[i]@logical_basis).flatten()
    # d_bound, logical_op = get_classical_code_distance_special_treatment(h, target_weight=target_weight)
    # print(f'logical_op {i}: ', logical_op)
    pos_ones = np.where(logical_op == 1)[0]
    # print(f'pos_ones {i}: ', pos_ones)
    pos_ones = [new_to_old[j] for j in pos_ones]
    print('positions of one in the logical op (original indices): ', pos_ones)

    # visualize the points
    fig, ax = plt.subplots()
    xs_after_removal = [x for i, x in enumerate(xs) if i not in columns_to_remove]
    ys_after_removal = [y for i, y in enumerate(ys) if i not in columns_to_remove]
    ax.scatter(xs_after_removal, ys_after_removal, marker='o')
    # # annotate the points
    # for i in range(len(xs)):
    #     plt.annotate(i, (xs[i], ys[i]), zorder=2)
    ax.scatter(xs[pos_ones], ys[pos_ones], marker='o', color='pink', zorder=1)

    for edge in edges:
        plt.plot([xs[edge[0]], xs[edge[1]]], [ys[edge[0]], ys[edge[1]]], color='gray', alpha=0.5, zorder=0)

    edges_after_removal = []
    for edge in edges:
        if edge[0] not in columns_to_remove and edge[1] not in columns_to_remove:
            edges_after_removal.append([edge[0], edge[1]])

    for edge in edges_after_removal:
        plt.plot([xs[edge[0]], xs[edge[1]]], [ys[edge[0]], ys[edge[1]]], color='black', zorder=0)
    ax.set_aspect('equal')
    ax.set_axis_off()
    ax.set_title(f'logical operator {i}')
    # savename = f'logical_target_weight_{target_weight}.pdf'
    savename = f'logical_op_{i}.pdf'
    savepath = os.path.join(savedir, savename)
    plt.savefig(savepath, bbox_inches='tight', pad_inches=0)


# ############################################################################################################
# # debug
# ############################################################################################################
# fig, ax = plt.subplots()
# xs_after_removal = [x for i, x in enumerate(xs) if i not in columns_to_remove]
# ys_after_removal = [y for i, y in enumerate(ys) if i not in columns_to_remove]
# ax.scatter(xs_after_removal, ys_after_removal, marker='o')
# # annotate the points
# for i in range(len(xs_after_removal)):
#     plt.annotate(new_to_old[i], (xs_after_removal[i], ys_after_removal[i]), zorder=2)

# for edge in edges:
#     plt.plot([xs[edge[0]], xs[edge[1]]], [ys[edge[0]], ys[edge[1]]], color='gray', alpha=0.5, zorder=0)

# edges_after_removal = []
# for edge in edges:
#     if edge[0] not in columns_to_remove and edge[1] not in columns_to_remove:
#         edges_after_removal.append([edge[0], edge[1]])

# for edge in edges_after_removal:
#     plt.plot([xs[edge[0]], xs[edge[1]]], [ys[edge[0]], ys[edge[1]]], color='black', zorder=0)
# ax.set_aspect('equal')
# ax.set_axis_off()
# plt.show()

